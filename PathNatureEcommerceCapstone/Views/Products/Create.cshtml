@model PathNatureEcommerceCapstone.Models.DatabaseCapstone.Products

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPageAdmin.cshtml";
}

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <!-- BREADCRUMBS-->
        <div class="col-md-12">

            <h1 class="d-flex d-lg-inline-flex display-5 mt-4">Create New Product</h1>
            <!-- BREADCRUMBS-->
            <ol class="breadcrumb mb-4">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Dashboard", "Admin")">
                        Dashboard
                    </a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Products")">
                        Products
                    </a>
                </li>
                <li class="breadcrumb-item active"> Create new Product</li>
            </ol>
        </div>
        <!-- SEZIONE CENTRALE FORM-->
        <div class="col-12">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.FK_Products_CategoriesID, "FK_Products_CategoriesID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FK_Products_CategoriesID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FK_Products_CategoriesID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- switch is active or deleted-->
            <div class="d-flex">
                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.CheckBox("IsActive")
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group ms-5">
                    @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.CheckBox("IsFeatured")
                            @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <!--Hidden IsDeleted-->
                @Html.HiddenFor(model => model.IsDeleted)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- PRODOTTI IMMAGINE!-->
            <div class="form-group">
                @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="ProductImageFile" id="ProductImageFile" class="form-control" />
                    @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- SAVE BUTTONS -->
            <div class="form-group mt-3">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-outline-info" />
                </div>
            </div>


            <!-- ERROR MESSAGE-->
            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.ErrorMessage
                </div>
            }


            <!-- back to list -->
            <div class="mt-5">
                <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i> Back to List
                </a>
            </div>


        </div>
    </div>
}
