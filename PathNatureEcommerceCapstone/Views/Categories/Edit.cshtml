@model PathNatureEcommerceCapstone.Models.DatabaseCapstone.Categories

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPageAdmin.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-6">


        <!-- BREADCRUMBS-->
        <div class="col-lg-12 col-md-6 col-sm-6">

            <div class="col-12">
                <h1 class=" display-4 mt-4">
                    Edit Category
                </h1>
            </div>

            <!-- BREADCRUMBS-->
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb col-12 mx-2 p-2 bg-secondary-subtle bg-light bg-opacity-75 rounded-pill">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Categories")"> Categories Index</a></li>
                    <li class="breadcrumb-item active" aria-current="page"> Edit Category</li>
                </ol>
            </nav>


        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CategoryID)

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- PRODOTTI IMMAGINE!-->
        <!--<div class="form-group">
            @Html.LabelFor(model => model.CategoryImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ProductImageFile" id="ProductImageFile" class="form-control" />
                @Html.ValidationMessageFor(model => model.CategoryImage, "", new { @class = "text-danger" })
            </div>
        </div>-->

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDeleted)
                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!-- SAVE BUTTONS -->
        <div class="form-group mt-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-outline-info" />
            </div>
        </div>
    </div>
}

<!-- back to list -->
<div class="mt-5">
    <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-secondary">
        <i class="fas fa-arrow-left me-1"></i> Back to List
    </a>
</div>
